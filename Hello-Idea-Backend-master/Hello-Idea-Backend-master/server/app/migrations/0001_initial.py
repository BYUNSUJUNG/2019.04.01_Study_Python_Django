# Generated by Django 2.1.5 on 2019-04-03 05:22

import app.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('user_name', models.CharField(max_length=30, verbose_name='user name')),
                ('user_birth', models.DateField()),
                ('user_gender', models.CharField(max_length=10)),
                ('user_img', models.CharField(max_length=200)),
                ('user_bgimg', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('chat_id', models.AutoField(primary_key=True, serialize=False)),
                ('chat_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Chat',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Chat_cont',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_cont', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('chat_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Chat')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Chat_cont',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Chat_entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Chat')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Chat_entry',
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('follow_id', models.AutoField(primary_key=True, serialize=False)),
                ('partner_id', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Follow',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_img', models.CharField(max_length=200)),
                ('group_intro', models.CharField(max_length=200)),
                ('group_bgimg', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Group',
            },
        ),
        migrations.CreateModel(
            name='Group_entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Group')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Group_entry',
            },
        ),
        migrations.CreateModel(
            name='Group_tendency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField(unique=True, verbose_name=app.models.Group)),
                ('group_tendency', models.CharField(max_length=100)),
                ('society', models.IntegerField(default=0)),
                ('it', models.IntegerField(default=0)),
                ('sport', models.IntegerField(default=0)),
                ('life', models.IntegerField(default=0)),
                ('politics', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'Group_tendency',
            },
        ),
        migrations.CreateModel(
            name='Idea',
            fields=[
                ('idea_id', models.AutoField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField(null=True)),
                ('idea_cont', models.CharField(max_length=150)),
                ('idea_senti', models.CharField(max_length=50)),
                ('is_forked', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Idea',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Idea_child',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('idea_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Idea')),
            ],
            options={
                'db_table': 'Idea_child',
            },
        ),
        migrations.CreateModel(
            name='Idea_file',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idea_file', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('idea_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Idea')),
            ],
            options={
                'db_table': 'Idea_file',
            },
        ),
        migrations.CreateModel(
            name='Idea_fork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idea_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Idea')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Idea_fork',
            },
        ),
        migrations.CreateModel(
            name='Idea_keyword',
            fields=[
                ('idea_keyword_id', models.AutoField(primary_key=True, serialize=False)),
                ('idea_keyword', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'Idea_keyword',
            },
        ),
        migrations.CreateModel(
            name='Idea_keyword_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idea_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Idea')),
                ('idea_keyword_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Idea_keyword')),
            ],
            options={
                'db_table': 'Idea_keyword_list',
            },
        ),
        migrations.CreateModel(
            name='Idea_loc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idea_id', models.IntegerField(unique=True)),
                ('idea_x', models.FloatField()),
                ('idea_y', models.FloatField()),
                ('idea_width', models.FloatField()),
                ('idea_height', models.FloatField()),
            ],
            options={
                'db_table': 'Idea_loc',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notify_id', models.AutoField(primary_key=True, serialize=False)),
                ('receive_id', models.IntegerField()),
                ('notify_cont', models.CharField(max_length=200)),
                ('read_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('send_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Notification',
            },
        ),
        migrations.CreateModel(
            name='Person_tendency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(unique=True, verbose_name=app.models.User)),
                ('society', models.IntegerField(default=0)),
                ('it', models.IntegerField(default=0)),
                ('sport', models.IntegerField(default=0)),
                ('life', models.IntegerField(default=0)),
                ('politics', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'Person_tendency',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('project_topic', models.CharField(max_length=100)),
                ('project_img', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Group')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Project',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Project_category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_tag', models.CharField(max_length=50)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Project')),
            ],
            options={
                'db_table': 'Project_category',
            },
        ),
        migrations.CreateModel(
            name='Project_hit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Project')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Project_hit',
            },
        ),
        migrations.CreateModel(
            name='Project_like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Project')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Project_like',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('request_id', models.AutoField(primary_key=True, serialize=False)),
                ('receive_id', models.IntegerField()),
                ('request_cont', models.CharField(max_length=200)),
                ('is_accepted', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('send_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Request',
            },
        ),
        migrations.AddField(
            model_name='idea',
            name='project_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Project'),
        ),
        migrations.AddField(
            model_name='idea',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
